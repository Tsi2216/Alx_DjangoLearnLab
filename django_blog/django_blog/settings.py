"""
Django settings for django_blog project.
Generated by 'django-admin startproject' using Django 5.2.7.
"""

from pathlib import Path
import os

# Base directory of the project
BASE_DIR = Path(__file__).resolve().parent.parent


# -------------------------------
# SECURITY SETTINGS
# -------------------------------
SECRET_KEY = 'django-insecure-d@bej6)l^a$3o%2qt54ch=5l1z5%riy%3su-hk*9xj9e6dnq!@'
DEBUG = True
ALLOWED_HOSTS = []


# -------------------------------
# APPLICATIONS
# -------------------------------
INSTALLED_APPS = [
    # Django default apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Custom apps
    'blog',  # your blog app
]


# -------------------------------
# MIDDLEWARE
# -------------------------------
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


# -------------------------------
# ROOT URL CONFIGURATION
# -------------------------------
ROOT_URLCONF = 'django_blog.urls'


# -------------------------------
# TEMPLATES
# -------------------------------
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Global templates folder (optional)
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  # required by auth
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# -------------------------------
# WSGI APPLICATION
# -------------------------------
WSGI_APPLICATION = 'django_blog.wsgi.application'


# -------------------------------
# DATABASE (PostgreSQL)
# -------------------------------
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'blogdb',
        'USER': 'your_username',       # change to your DB username
        'PASSWORD': 'your_password',   # change to your DB password
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# -------------------------------
# PASSWORD VALIDATION
# -------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# -------------------------------
# INTERNATIONALIZATION
# -------------------------------
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# -------------------------------
# STATIC FILES (CSS, JS, Images)
# -------------------------------
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "blog" / "static",  # app-level static folder
]
STATIC_ROOT = BASE_DIR / "staticfiles"  # for collectstatic in production


# -------------------------------
# MEDIA FILES (User-uploaded content)
# -------------------------------
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"


# -------------------------------
# AUTHENTICATION SETTINGS
# -------------------------------
# Redirect URLs after login/logout
LOGIN_REDIRECT_URL = 'blog:profile'
LOGOUT_REDIRECT_URL = 'blog:login'

# Optional: specify custom login URL if using decorators
LOGIN_URL = 'blog:login'


# -------------------------------
# DEFAULT PRIMARY KEY
# -------------------------------
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
